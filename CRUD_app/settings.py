"""
Django settings for CRUD_app project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from .keyvaultfile import *
import os
from .Resources import *

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
print(BASE_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-x*ge=e5c2g2zg0)6s4uzm44-(q975my5cx@m94jsv_7!%xu-%z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'myapp'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware'
]

ROOT_URLCONF = 'CRUD_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'CRUD_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'mssql',
        "NAME": DBName,  # env variable
        "USER": gets_secerts(vault_url, "DBusername"),  # keyvault
        # keyvault
        "PASSWORD": gets_secerts(vault_url, "DBpassword"),
        "HOST": DB_host,  # env variable
        'Trusted_Connection': 'no',
        'OPTIONS': {
            'driver': 'ODBC Driver 18 for SQL Server',
            # 'extra_params': "Authentication=ActiveDirectoryMsi;Encrypt=yes;TrustServerCertificate=no"
        }
    }
}
# To connect Azure SQL DB using MSI (Managed Service Identity)
# {
#     'ENGINE': 'mssql',
#     'HOST': 'xyz.database.windows.net',
#     'NAME': 'mydb',
#     'PORT': '',
#     'Trusted_Connection': 'no',
#     'OPTIONS': {
#         'driver': 'ODBC Driver 17 for SQL Server',
#         'extra_params': "Authentication=ActiveDirectoryMsi;Encrypt=yes;TrustServerCertificate=no" }
# }


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
CORS_ALLOWED_ORIGINS = [
    "https://example.com",
    "https://sub.example.com",
    "http://localhost:4200",
    "http://127.0.0.1:4200",
    "https://nileshangularfrontend.azurewebsites.net"
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
MEDIA_ROOT = os.path.join(BASE_DIR)
MEDIA_URL = '/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
STATIC_ROOT = 'static'

# DEFAULT_FILE_STORAGE = 'backend.utils.custom_azure.AzureMediaStorage'
# STATICFILES_STORAGE = 'backend.utils.custom_azure.AzureStaticStorage'

# STATIC_LOCATION = "static"
# MEDIA_LOCATION = "nileshimagescontaine"

# AZURE_ACCOUNT_NAME = "assessmentstgacc"
# AZURE_ACCOUNT_KEY = "eiyYAT6BkNDxxQ1KSFDEjkJ87GXUvAqO1By/bW1m0WTN0MWp5PSFrDYw0lAfHza17CCpUEYYTNhp+AStufDnyw=="
# AZURE_CUSTOM_DOMAIN = f'{AZURE_ACCOUNT_NAME}.blob.core.windows.net'
# AZURE_BLOB_URL = f'https://{AZURE_CUSTOM_DOMAIN}'

# AZURE_OVERWRITE_FILES = True

# STATIC_ROOT = f'https://{AZURE_CUSTOM_DOMAIN}/{STATIC_LOCATION}/'
# STATIC_URL = f'https://{AZURE_CUSTOM_DOMAIN}/{STATIC_LOCATION}/'
# MEDIA_URL = f'https://{AZURE_CUSTOM_DOMAIN}/{MEDIA_LOCATION}/'

# DATA_PATH = 'data'
key_vault = "nileshkeyvault"
AZURE_STORAGE_ACCOUNT = gets_secerts(vault_url, "BlobSasUrl")
# AZURE_VAULT_ACCOUNT = env('AZURE_VAULT_ACCOUNT')
# AZURE_STORAGE_KEY_NAME = env('AZURE_STORAGE_KEY_NAME')
AZURE_APP_BLOB_NAME = AZURE_APP_BLOB_NAME
AZURE_BLOB_PATH = "https://assessmentstgacc.blob.core.windows.net/nileshimagescontainer/nileshimagescontainer"

# keyvault
# AZURE_STORAGE_ACCOUNT = gets_secerts(vault_url, "BlobSasUrl")
# # AZURE_VAULT_ACCOUNT = env('AZURE_VAULT_ACCOUNT')
# # AZURE_STORAGE_KEY_NAME = env('AZURE_STORAGE_KEY_NAME')
# AZURE_APP_BLOB_NAME = "nileshimagescontainer"  # enc variable
# AZURE_BLOB_PATH = "https://assessmentstgacc.blob.core.windows.net/nileshimagescontainer/"  # env variable
